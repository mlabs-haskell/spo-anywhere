{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About the Project","text":"<p><code>SPO-anywhere</code> is a collection of NixOS modules, Nix packages and Nix library functions simplifying the deployment and operation of Cardano stake pools.</p>"},{"location":"#why","title":"Why?","text":"<p>Nix is a declarative package manager ensuring hash-based dependency pinning and reproducible builds. NixOS is a Linux distribution with a declarative configuration system providing atomic updates and rollbacks. These features are responsible for the increased reliability of a NixOS system, making it an attractive DevOps toolset for deploying Cardano services.</p>"},{"location":"#what","title":"What?","text":"<p>By its nature, stake pool operation is a multistep process. <code>SPO-anywhere</code> guides you through this process providing a <code>Nix</code> helper functions, <code>NixOS</code> modules and scripts for key generation and deployment. The use of <code>Nix</code> makes the process easy to reproduce or introduce into a CI/CD pipeline. The package consists of:</p> <ul> <li><code>NixOS</code> module simplifying the definition of stake pool nodes</li> <li>a deployment script for every one of your nodes</li> </ul> <p>and importantly a documentation and an example that ties the process together.</p>"},{"location":"license/","title":"License","text":"<p>Apache License Version 2.0, January 2004 http://www.apache.org/licenses/</p>"},{"location":"license/#terms-and-conditions-for-use-reproduction-and-distribution","title":"TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION","text":"<p>1- Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.</p> <p>2- Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.</p> <p>3- Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.</p> <p>4- Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.</p> <p>5- Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.</p> <p>6- Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.</p> <p>7- Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.</p> <p>8- Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.</p> <p>9- Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.</p> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <p>To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.</p> <p>Copyright 2023 MLabs ltd, and SPO-anywhere contributors.</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <p>http://www.apache.org/licenses/LICENSE-2.0</p> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"development/contributing/","title":"Contributing","text":"<p>There are several ways you can contribute.</p>"},{"location":"development/contributing/#reporting-issues","title":"Reporting issues","text":"<ul> <li>Search the issue tracker before creating a new issue</li> <li>Provide detailed steps to reproduce the issue</li> <li>Include as much information as possible</li> </ul>"},{"location":"development/contributing/#proposing-features","title":"Proposing features","text":"<ul> <li>Use the issue tracker to propose new features</li> <li>Feel free to also propose a PR implementing it</li> </ul>"},{"location":"development/contributing/#code-style-guidelines","title":"Code style guidelines","text":"<ul> <li>Format everything with <code>nix fmt .</code></li> </ul>"},{"location":"development/contributing/#checks","title":"Checks","text":"<ul> <li>You can verify that all checks pass with <code>nix flake check</code></li> </ul> <p>Thank you for contributing to <code>spo-anywhere</code>! Your help is greatly appreciated \ud83d\ude0a</p>"},{"location":"development/develop/","title":"Develop","text":"<p>Development is supported on linux systems. Virtual machines are run with <code>qemu</code> so <code>kvm</code> is recommended. Follow the installation guide to set up nix.</p>"},{"location":"development/develop/#development-shell","title":"Development Shell","text":"<p><code>spo-anywhere</code> provides a devshell that includes various tools to build, test, run and update the project:</p> <pre><code>$ nix develop\n...\n\u2744\ufe0f Welcome to the SPO-anywhere devshell \u2744\ufe0f\n\n[Tools]\n\n  build-all  - Build all the checks\n  check      - Alias of `nix flake check`\n  fmt        - Format the source tree\n\n[[general commands]]\n\n  menu       - prints this menu\n\n[documentation]\n\n  docs-build - build documentation\n  docs-serve - serve documentation web page\n\n[testing]\n\n  run-test   - Run tests\n</code></pre> <p>A <code>.envrc</code> file is also provided, using direnv and nix-direnv is suggested.</p>"},{"location":"development/develop/#running-integration-tests","title":"Running Integration Tests","text":"<p>From the devshell you can run integration tests with <code>run-test</code>, for example the following will start two <code>cardano-node</code>'s and on a testnet, spend some transaction and wait for its inclusion in a minted block.</p> <pre><code>run-test relay-node\n</code></pre>"},{"location":"getting-started/cloud-tutorial/","title":"Cloud Tutorial","text":"<p>Read the Cardano documentation on how to Oparate a Stake Pool.</p> <p>This tutorial will guide you through deploying a stake pool to a cloud host using spo-anywhere.</p>"},{"location":"getting-started/cloud-tutorial/#clout-host","title":"Clout Host","text":"<p>A cloud host is required as the target of deployment. We tested AWS, DigitalOcean and Hetzner with Ubuntu 24.04.</p> <p>Creeate a cloud host for the block producer node in the cloud console, API, or via IaC tools such as OpenTofu. The following requirements should be met:</p> <ul> <li>At least 4GB RAM</li> <li>Ubuntu 24.04</li> <li>SSH public key authentication configured for <code>root</code> user.</li> </ul> <p>In the case of public testnets and mainnet, there may be additional requirements, such as more RAM and disk space.</p> <p>Note down the IP address of the host. As an example, we will use a Hetzner Cloud host at IP <code>12.34.56.78</code>. Verify that SSH works:</p> <pre><code>ssh root@12.34.56.78\n...\n# press Ctrl+D to exit\n</code></pre>"},{"location":"getting-started/cloud-tutorial/#start-new-project-with-flake-template","title":"Start new project with flake template","text":"<p>Follow the installation instructions.</p> <p>A great way to to get started is to use the flake template provided by spo-anywhere. Here's how to start a new project using the <code>cloud</code> template:</p> <pre><code>mkdir myproject\ncd myproject\nnix flake init --template github:mlabs-haskell/spo-anywhere#cloud\n</code></pre>"},{"location":"getting-started/cloud-tutorial/#configure","title":"Configure","text":"<p>Edit <code>target.nix</code>. Update your SSH public key and IP address by changing the following lines:</p> <pre><code>  users.users.root.openssh.authorizedKeys.keys = [ \"ssh-...\" ];\n\n  spo-anywhere.install-script.target = \"root@12.34.56.78\";\n</code></pre> <p>For this tutorial, we will use testing private keys included with the project and configured by default, which are suitable for testing but should not be used for public networks. For details on how to generate and configure different keys, see Configure Pool and Generate Keys.</p>"},{"location":"getting-started/cloud-tutorial/#install","title":"Install","text":"<p>Install NixOS and start configuration with block producer node:</p> <pre><code>nix run .#install -- --ssh-key &lt;private-key-path&gt;\n</code></pre>"},{"location":"getting-started/cloud-tutorial/#check","title":"Check","text":"<p>SSH into the machine and check the cardano-node logs:</p> <pre><code>ssh root@12.34.56.78\njournalctl -e -u cardano-node\n</code></pre> <p>When blocks are produced, logs like this should show up:</p> <pre><code>Jan 29 07:01:21 spo-anywhere-test cardano-node-start[938]: [spo-anyw:cardano.node.Forge:Info:52] [2025-01-29 07:01:21.00 UTC] fromList [(\"credentials\",String \"Cardano\"),(\"val\",Object (fromList [(\"block\",String \"61c5de2ece6ceee1fca8716a94d38875ca3ed23c8d7b16b23b2933fa8cd1bff4\"),(\"blockNo\",Number 30.0),(\"blockPrev\",String \"6af1f332aac4adc1ab42f19b4750a6f47844a627532444f2fdf85f2c2f0f14a7\"),(\"kind\",String \"TraceForgedBlock\"),(\"slot\",Number 716.0)]))]\nJan 29 07:01:21 spo-anywhere-test cardano-node-start[938]: [spo-anyw:cardano.node.ChainDB:Notice:35] [2025-01-29 07:01:21.00 UTC] Chain extended, new tip: 61c5de2ece6ceee1fca8716a94d38875ca3ed23c8d7b16b23b2933fa8cd1bff4 at slot 716\n</code></pre> <p>For public networks it may be necessary to register the pool first.</p>"},{"location":"getting-started/cloud-tutorial/#deploy","title":"Deploy","text":"<p>To modify the configuration, edit e.g. <code>configration.nix</code> and deploy it with a deployment tool, e.g. using <code>nixos-rebuild</code>:</p> <pre><code>nix run nixpkgs#nixos-rebuild -- switch --flake .#spo-node --target-host root@12.34.56.78\n</code></pre>"},{"location":"getting-started/cloud-tutorial/#cloud-providers","title":"Cloud Providers","text":"<p>Cloud provider support is provided by srvos.</p> <p>To use a different cloud provider, edit <code>flake.nix</code> and replace <code>nixosModules.hardware-amazon</code> with one of the modules listed in the srvos docs, eg:</p> <pre><code>nixosModules.hardware-amazon\n</code></pre> <p>You may also need to change <code>disko.nix</code> or remove it and configure <code>fileSystems</code> and <code>boot</code> directly.</p> <p>Then follow this tutorial from the beginning to provision, configure and install a host.</p>"},{"location":"getting-started/cloud-tutorial/#customize","title":"Customize","text":"<p>To learn more, browse available NixOS options in nixpkgs and NixOS options provided by spo-anywhere (see other modules in the menu on the left). You can add these options to <code>configuration.nix</code> to configure the system and then deploy as above.</p>"},{"location":"getting-started/cloud-tutorial/#public-networks","title":"Public Networks","text":"<p>For public networks, a few more things need to be considered. Here is a partial list:</p> <ul> <li>an offline (airgapped) node should used for generating keys and signing transactions</li> <li>a redundat set of relay nodes should be used to connect the block producer node to the network</li> <li>the block producer node should be connected to the relay nodes via private networking (cloud provider dependent or VPN)</li> <li>network security including firewalls, VPNs and jump hosts have to be configured</li> </ul> <p>These are out of scope for this tutorial. A good way to get started deploying <code>cardano-node</code> hosts and networks is with cardano.nix.</p> <p>Read the Cardano documentation on how to Oparate a Stake Pool for more information.</p>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#requirements","title":"Requirements","text":"<ul> <li>linux</li> <li>nix</li> <li>kvm (optional, for running virtual machine tests)</li> </ul>"},{"location":"getting-started/installation/#setup","title":"Setup","text":"<p>Follow this guide to Install nix with flakes enabled.</p>"},{"location":"getting-started/installation/#binary-cache","title":"Binary cache","text":"<p>You can optionally use this project's binary cache to skip building software and download it instead. Edit <code>/etc/nix/nix.conf</code> (or related settings in NixOS config) and merge the new values separated by spaces into the options:</p> <pre><code>substituters = ... https://cache.staging.mlabs.city/spo-anywhere\ntrusted-public-keys = ... spo-anywhere:bmI58BmXnmeuAtMKbm3qhwiJ1RALMfo6cDwncfaGa6Q=\n</code></pre> <p>Don't edit <code>~/.config/nix/nix.conf</code> in your home directory. Don't add users to <code>trusted-users</code> because it is insecure.</p>"},{"location":"getting-started/installation/#check-that-it-works","title":"Check that it works","text":"<p><code>nix --version</code></p>"},{"location":"getting-started/installation/#learn-more","title":"Learn more","text":"<p>For an introduction to the Nix ecosystem, check out Zero to Nix. Learn more about Nix flakes and NixOS.</p>"},{"location":"getting-started/overview/","title":"Overview","text":"<p>Operating a Cardano stake pool consists of:</p> <ol> <li>Defining all the pool configurations for running the SPO nodes. For us here - in the form of <code>NixOS</code> modules.</li> <li>Generating keys.</li> <li>Deploying pool.</li> <li>Registering the stake address and pool by submitting registering transactions.</li> </ol>"},{"location":"reference/module-options/services.cardano-node/","title":"services.cardano-node","text":""},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeenable","title":"services.cardano-node.enable","text":"<p>Enable cardano-node, a node implementing ouroboros protocols (the blockchain protocols running cardano).</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodepackage","title":"services.cardano-node.package","text":"<p>The cardano-node package that should be used</p> <p>Type: package</p> <p>Default: <code>\"cardano-node\"</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeadditionallistenstream","title":"services.cardano-node.additionalListenStream","text":"<p>List of additional sockets to listen to. Only available with <code>systemdSocketActivation</code>.</p> <p>Type: function that evaluates to a(n) list of string</p> <p>Default: <code>&lt;function&gt;</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeasserts","title":"services.cardano-node.asserts","text":"<p>Whether to use an executable with asserts enabled.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodebootstrappeers","title":"services.cardano-node.bootstrapPeers","text":"<p>If set, it will enable bootstrap peers. To disable, set this to null. To enable, set this to a list of attributes of address and port, example: [{ address = \u201caddr\u201d; port = 3001; }]</p> <p>Type: null or (list of (attribute set))</p> <p>Default:</p> <pre><code>[\n  {\n    address = \"backbone.cardano.iog.io\";\n    port = 3001;\n  }\n  {\n    address = \"backbone.mainnet.emurgornd.com\";\n    port = 3001;\n  }\n  {\n    address = \"backbone.mainnet.cardanofoundation.org\";\n    port = 3001;\n  }\n]\n</code></pre> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodecardanonodepackages","title":"services.cardano-node.cardanoNodePackages","text":"<p>The cardano-node packages and library that should be used. Main usage is sharing optimization: reduce eval time when service is instantiated multiple times.</p> <p>Type: attribute set</p> <p>Default: <code>\"cardano-node packages\"</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodedatabasepath","title":"services.cardano-node.databasePath","text":"<p>Node database path, for each instance.</p> <p>Type: string or function that evaluates to a(n) string</p> <p>Default: <code>&lt;function&gt;</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodedbprefix","title":"services.cardano-node.dbPrefix","text":"<p>Prefix of database directories inside <code>stateDir</code>. (eg. for \u201cdb\u201d, there will be db-0, etc.).</p> <p>Type: string or function that evaluates to a(n) string</p> <p>Default: <code>&lt;function&gt;</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodedelegationcertificate","title":"services.cardano-node.delegationCertificate","text":"<p>Delegation certificate</p> <p>Type: null or string or path</p> <p>Default: <code>null</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeenvironment","title":"services.cardano-node.environment","text":"<p>environment node will connect to</p> <p>Type: one of \u201cmainnet\u201d, \u201cpreprod\u201d, \u201cpreview\u201d, \u201cprivate\u201d, \u201csanchonet\u201d, \u201cshelley_qa\u201d, \u201ctestnet\u201d</p> <p>Default: <code>\"testnet\"</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeenvironments","title":"services.cardano-node.environments","text":"<p>environment node will connect to</p> <p>Type: attribute set</p> <p>Default:</p> This value is long. Click to expand. <pre><code>{\n  mainnet = {\n    confKey = \"mainnet_full\";\n    consensusProtocol = \"Cardano\";\n    dbSyncConfig = {\n      EnableFutureGenesis = true;\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      NetworkName = \"mainnet\";\n      NodeConfigFile = \"/nix/store/kcl7gc0q0w70c51lnfh1cdk70niylshd-config-mainnet.json\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresNoMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    domain = \"cardano-mainnet.iohk.io\";\n    edgeNodes = [\n      {\n        addr = \"backbone.cardano-mainnet.iohk.io\";\n        port = 3001;\n      }\n      {\n        addr = \"backbone.cardano.iog.io\";\n        port = 3001;\n      }\n      {\n        addr = \"backbone.mainnet.emurgornd.com\";\n        port = 3001;\n      }\n      {\n        addr = \"backbone.mainnet.cardanofoundation.org\";\n        port = 3001;\n      }\n    ];\n    edgePort = 3001;\n    explorerConfig = {\n      NetworkName = \"mainnet\";\n      NodeConfigFile = \"/nix/store/kcl7gc0q0w70c51lnfh1cdk70niylshd-config-mainnet.json\";\n      RequiresNetworkMagic = \"RequiresNoMagic\";\n    };\n    explorerUrl = \"https://explorer.cardano.org\";\n    extraDbSyncConfig = {\n      enableFutureGenesis = true;\n    };\n    metadataUrl = \"https://tokens.cardano.org\";\n    mithrilAggregatorEndpointUrl = \"https://aggregator.release-mainnet.api.mithril.network/aggregator\";\n    mithrilEraReaderParams = {\n      address = \"addr1qy72kwgm6kypyc5maw0h8mfagwag8wjnx6emgfnsnhqaml6gx7gg4tzplw9l32nsgclqax7stc4u6c5dn0ctljwscm2sqv0teg\";\n      verification_key = \"5b31312c3133342c3231352c37362c3134312c3232302c3131312c3135342c36332c3233302c3131342c31322c38372c37342c39342c3137322c3133322c32372c39362c3138362c3132362c3137382c31392c3131342c33302c3234332c36342c3134312c3131302c38332c38362c31395d\";\n    };\n    mithrilGenesisVerificationKey = \"5b3139312c36362c3134302c3138352c3133382c31312c3233372c3230372c3235302c3134342c32372c322c3138382c33302c31322c38312c3135352c3230342c31302c3137392c37352c32332c3133382c3139362c3231372c352c31342c32302c35372c37392c33392c3137365d\";\n    mithrilSignerConfig = {\n      aggregator_endpoint = \"https://aggregator.release-mainnet.api.mithril.network/aggregator\";\n      era_reader_adapter_params = \"{\\\"address\\\":\\\"addr1qy72kwgm6kypyc5maw0h8mfagwag8wjnx6emgfnsnhqaml6gx7gg4tzplw9l32nsgclqax7stc4u6c5dn0ctljwscm2sqv0teg\\\",\\\"verification_key\\\":\\\"5b31312c3133342c3231352c37362c3134312c3232302c3131312c3135342c36332c3233302c3131342c31322c38372c37342c39342c3137322c3133322c32372c39362c3138362c3132362c3137382c31392c3131342c33302c3234332c36342c3134312c3131302c38332c38362c31395d\\\"}\";\n      era_reader_adapter_type = \"cardano-chain\";\n      network = \"mainnet\";\n      network_magic = 764824073;\n      run_interval = 60000;\n      store_retention_limit = 5;\n    };\n    name = \"mainnet\";\n    networkConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/byron-genesis.json;\n      ByronGenesisHash = \"5f20df933584822601f9e3f8c024eb5eb252fe8cefb24d1317dc3d432e940ebb\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/conway-genesis.json;\n      ConwayGenesisHash = \"15a199f895e461ec0ffc6dd4e4028af28a492ab4e806d39cb674c88f7643ef62\";\n      EnableP2P = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 0;\n      MaxKnownMajorProtocolVersion = 2;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresNoMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/shelley-genesis.json;\n      ShelleyGenesisHash = \"1a3be38bcbb7911969283716ad7aa550250226b76a61fc51cc9a9a35d9276d81\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n      TraceMempool = false;\n    };\n    networkConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/byron-genesis.json;\n      ByronGenesisHash = \"5f20df933584822601f9e3f8c024eb5eb252fe8cefb24d1317dc3d432e940ebb\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/conway-genesis.json;\n      ConwayGenesisHash = \"15a199f895e461ec0ffc6dd4e4028af28a492ab4e806d39cb674c88f7643ef62\";\n      EnableP2P = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 0;\n      MaxKnownMajorProtocolVersion = 2;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresNoMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/shelley-genesis.json;\n      ShelleyGenesisHash = \"1a3be38bcbb7911969283716ad7aa550250226b76a61fc51cc9a9a35d9276d81\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n      TraceMempool = false;\n    };\n    nodeConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/byron-genesis.json;\n      ByronGenesisHash = \"5f20df933584822601f9e3f8c024eb5eb252fe8cefb24d1317dc3d432e940ebb\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/conway-genesis.json;\n      ConwayGenesisHash = \"15a199f895e461ec0ffc6dd4e4028af28a492ab4e806d39cb674c88f7643ef62\";\n      EnableP2P = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 0;\n      MaxKnownMajorProtocolVersion = 2;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresNoMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/shelley-genesis.json;\n      ShelleyGenesisHash = \"1a3be38bcbb7911969283716ad7aa550250226b76a61fc51cc9a9a35d9276d81\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = false;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    nodeConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/byron-genesis.json;\n      ByronGenesisHash = \"5f20df933584822601f9e3f8c024eb5eb252fe8cefb24d1317dc3d432e940ebb\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/conway-genesis.json;\n      ConwayGenesisHash = \"15a199f895e461ec0ffc6dd4e4028af28a492ab4e806d39cb674c88f7643ef62\";\n      EnableP2P = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 0;\n      MaxKnownMajorProtocolVersion = 2;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresNoMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/shelley-genesis.json;\n      ShelleyGenesisHash = \"1a3be38bcbb7911969283716ad7aa550250226b76a61fc51cc9a9a35d9276d81\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = false;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    private = false;\n    relays = \"relays.cardano-mainnet.iohk.io\";\n    relaysNew = \"backbone.cardano-mainnet.iohk.io\";\n    smashUrl = \"https://smash.cardano-mainnet.iohk.io\";\n    submitApiConfig = {\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      GenesisHash = \"5f20df933584822601f9e3f8c024eb5eb252fe8cefb24d1317dc3d432e940ebb\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresNoMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    useByronWallet = true;\n    usePeersFromLedgerAfterSlot = 128908821;\n  };\n  preprod = {\n    consensusProtocol = \"Cardano\";\n    dbSyncConfig = {\n      EnableFutureGenesis = true;\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      NetworkName = \"preprod\";\n      NodeConfigFile = \"/nix/store/xlnij79vm8cf9a4ak59q6p80lfcmrzy2-config-preprod.json\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    domain = \"play.dev.cardano.org\";\n    edgeNodes = [\n      {\n        addr = \"preprod-node.play.dev.cardano.org\";\n        port = 3001;\n      }\n    ];\n    edgePort = 3001;\n    explorerConfig = {\n      NetworkName = \"preprod\";\n      NodeConfigFile = \"/nix/store/xlnij79vm8cf9a4ak59q6p80lfcmrzy2-config-preprod.json\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n    };\n    explorerUrl = \"https://preprod-explorer.play.dev.cardano.org\";\n    extraDbSyncConfig = {\n      enableFutureGenesis = true;\n    };\n    metadataUrl = \"https://metadata.play.dev.cardano.org\";\n    mithrilAggregatorEndpointUrl = \"https://aggregator.release-preprod.api.mithril.network/aggregator\";\n    mithrilEraReaderParams = {\n      address = \"addr_test1qpkyv2ws0deszm67t840sdnruqgr492n80g3y96xw3p2ksk6suj5musy6w8lsg3yjd09cnpgctc2qh386rtxphxt248qr0npnx\";\n      verification_key = \"5b35352c3232382c3134342c38372c3133382c3133362c34382c382c31342c3138372c38352c3134382c39372c3233322c3235352c3232392c33382c3234342c3234372c3230342c3139382c31332c33312c3232322c32352c3136342c35322c3130322c39312c3132302c3230382c3134375d\";\n    };\n    mithrilGenesisVerificationKey = \"5b3132372c37332c3132342c3136312c362c3133372c3133312c3231332c3230372c3131372c3139382c38352c3137362c3139392c3136322c3234312c36382c3132332c3131392c3134352c31332c3233322c3234332c34392c3232392c322c3234392c3230352c3230352c33392c3233352c34345d\";\n    mithrilSignerConfig = {\n      aggregator_endpoint = \"https://aggregator.release-preprod.api.mithril.network/aggregator\";\n      era_reader_adapter_params = \"{\\\"address\\\":\\\"addr_test1qpkyv2ws0deszm67t840sdnruqgr492n80g3y96xw3p2ksk6suj5musy6w8lsg3yjd09cnpgctc2qh386rtxphxt248qr0npnx\\\",\\\"verification_key\\\":\\\"5b35352c3232382c3134342c38372c3133382c3133362c34382c382c31342c3138372c38352c3134382c39372c3233322c3235352c3232392c33382c3234342c3234372c3230342c3139382c31332c33312c3232322c32352c3136342c35322c3130322c39312c3132302c3230382c3134375d\\\"}\";\n      era_reader_adapter_type = \"cardano-chain\";\n      network = \"preprod\";\n      network_magic = 1;\n      run_interval = 60000;\n      store_retention_limit = 5;\n    };\n    name = \"preprod\";\n    networkConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/byron-genesis.json;\n      ByronGenesisHash = \"d4b8de7a11d929a323373cbab6c1a9bdc931beffff11db111cf9d57356ee1937\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/conway-genesis.json;\n      ConwayGenesisHash = \"0eb6adaec3fcb1fe286c1b4ae0da2a117eafc3add51e17577d36dd39eddfc3db\";\n      EnableP2P = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 2;\n      LastKnownBlockVersion-Minor = 0;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/shelley-genesis.json;\n      ShelleyGenesisHash = \"162d29c4e1cf6b8a84f2d692e67a3ac6bc7851bc3e6e4afe64d15778bed8bd86\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n    };\n    networkConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/byron-genesis.json;\n      ByronGenesisHash = \"d4b8de7a11d929a323373cbab6c1a9bdc931beffff11db111cf9d57356ee1937\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/conway-genesis.json;\n      ConwayGenesisHash = \"0eb6adaec3fcb1fe286c1b4ae0da2a117eafc3add51e17577d36dd39eddfc3db\";\n      EnableP2P = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 2;\n      LastKnownBlockVersion-Minor = 0;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/shelley-genesis.json;\n      ShelleyGenesisHash = \"162d29c4e1cf6b8a84f2d692e67a3ac6bc7851bc3e6e4afe64d15778bed8bd86\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n    };\n    nodeConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/byron-genesis.json;\n      ByronGenesisHash = \"d4b8de7a11d929a323373cbab6c1a9bdc931beffff11db111cf9d57356ee1937\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/conway-genesis.json;\n      ConwayGenesisHash = \"0eb6adaec3fcb1fe286c1b4ae0da2a117eafc3add51e17577d36dd39eddfc3db\";\n      EnableP2P = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 2;\n      LastKnownBlockVersion-Minor = 0;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/shelley-genesis.json;\n      ShelleyGenesisHash = \"162d29c4e1cf6b8a84f2d692e67a3ac6bc7851bc3e6e4afe64d15778bed8bd86\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    nodeConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/byron-genesis.json;\n      ByronGenesisHash = \"d4b8de7a11d929a323373cbab6c1a9bdc931beffff11db111cf9d57356ee1937\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/conway-genesis.json;\n      ConwayGenesisHash = \"0eb6adaec3fcb1fe286c1b4ae0da2a117eafc3add51e17577d36dd39eddfc3db\";\n      EnableP2P = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 2;\n      LastKnownBlockVersion-Minor = 0;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preprod/shelley-genesis.json;\n      ShelleyGenesisHash = \"162d29c4e1cf6b8a84f2d692e67a3ac6bc7851bc3e6e4afe64d15778bed8bd86\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    private = false;\n    relaysNew = \"preprod-node.play.dev.cardano.org\";\n    smashUrl = \"https://preprod-smash.play.dev.cardano.org\";\n    submitApiConfig = {\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      GenesisHash = \"d4b8de7a11d929a323373cbab6c1a9bdc931beffff11db111cf9d57356ee1937\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    useByronWallet = false;\n    usePeersFromLedgerAfterSlot = 64454371;\n  };\n  preview = {\n    consensusProtocol = \"Cardano\";\n    dbSyncConfig = {\n      EnableFutureGenesis = true;\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      NetworkName = \"preview\";\n      NodeConfigFile = \"/nix/store/mk35kwvnmi91g2qx2f8xi63glsmx6pg2-config-preview.json\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    domain = \"play.dev.cardano.org\";\n    edgeNodes = [\n      {\n        addr = \"preview-node.play.dev.cardano.org\";\n        port = 3001;\n      }\n    ];\n    edgePort = 3001;\n    explorerConfig = {\n      NetworkName = \"preview\";\n      NodeConfigFile = \"/nix/store/mk35kwvnmi91g2qx2f8xi63glsmx6pg2-config-preview.json\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n    };\n    explorerUrl = \"https://preview-explorer.play.dev.cardano.org\";\n    extraDbSyncConfig = {\n      enableFutureGenesis = true;\n    };\n    metadataUrl = \"https://metadata.play.dev.cardano.org\";\n    mithrilAggregatorEndpointUrl = \"https://aggregator.pre-release-preview.api.mithril.network/aggregator\";\n    mithrilEraReaderParams = {\n      address = \"addr_test1qrv5xfwh043mlc3vk5d97s4nmhxu7cmleyssvhx37gkfyejfe8d38v3vsfgetjafgrsdc49krug8wf04h5rmtengtejqlxrksk\";\n      verification_key = \"5b35352c3232382c3134342c38372c3133382c3133362c34382c382c31342c3138372c38352c3134382c39372c3233322c3235352c3232392c33382c3234342c3234372c3230342c3139382c31332c33312c3232322c32352c3136342c35322c3130322c39312c3132302c3230382c3134375d\";\n    };\n    mithrilGenesisVerificationKey = \"5b3132372c37332c3132342c3136312c362c3133372c3133312c3231332c3230372c3131372c3139382c38352c3137362c3139392c3136322c3234312c36382c3132332c3131392c3134352c31332c3233322c3234332c34392c3232392c322c3234392c3230352c3230352c33392c3233352c34345d\";\n    mithrilSignerConfig = {\n      aggregator_endpoint = \"https://aggregator.pre-release-preview.api.mithril.network/aggregator\";\n      era_reader_adapter_params = \"{\\\"address\\\":\\\"addr_test1qrv5xfwh043mlc3vk5d97s4nmhxu7cmleyssvhx37gkfyejfe8d38v3vsfgetjafgrsdc49krug8wf04h5rmtengtejqlxrksk\\\",\\\"verification_key\\\":\\\"5b35352c3232382c3134342c38372c3133382c3133362c34382c382c31342c3138372c38352c3134382c39372c3233322c3235352c3232392c33382c3234342c3234372c3230342c3139382c31332c33312c3232322c32352c3136342c35322c3130322c39312c3132302c3230382c3134375d\\\"}\";\n      era_reader_adapter_type = \"cardano-chain\";\n      network = \"preview\";\n      network_magic = 2;\n      run_interval = 60000;\n      store_retention_limit = 5;\n    };\n    name = \"preview\";\n    networkConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/byron-genesis.json;\n      ByronGenesisHash = \"83de1d7302569ad56cf9139a41e2e11346d4cb4a31c00142557b6ab3fa550761\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/conway-genesis.json;\n      ConwayGenesisHash = \"9cc5084f02e27210eacba47af0872e3dba8946ad9460b6072d793e1d2f3987ef\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = false;\n      ExperimentalProtocolsEnabled = false;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/shelley-genesis.json;\n      ShelleyGenesisHash = \"363498d1024f84bb39d3fa9593ce391483cb40d479b87233f868d6e57c3a400d\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n    };\n    networkConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/byron-genesis.json;\n      ByronGenesisHash = \"83de1d7302569ad56cf9139a41e2e11346d4cb4a31c00142557b6ab3fa550761\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/conway-genesis.json;\n      ConwayGenesisHash = \"9cc5084f02e27210eacba47af0872e3dba8946ad9460b6072d793e1d2f3987ef\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = false;\n      ExperimentalProtocolsEnabled = false;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/shelley-genesis.json;\n      ShelleyGenesisHash = \"363498d1024f84bb39d3fa9593ce391483cb40d479b87233f868d6e57c3a400d\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n    };\n    nodeConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/byron-genesis.json;\n      ByronGenesisHash = \"83de1d7302569ad56cf9139a41e2e11346d4cb4a31c00142557b6ab3fa550761\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/conway-genesis.json;\n      ConwayGenesisHash = \"9cc5084f02e27210eacba47af0872e3dba8946ad9460b6072d793e1d2f3987ef\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = false;\n      ExperimentalProtocolsEnabled = false;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/shelley-genesis.json;\n      ShelleyGenesisHash = \"363498d1024f84bb39d3fa9593ce391483cb40d479b87233f868d6e57c3a400d\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    nodeConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/byron-genesis.json;\n      ByronGenesisHash = \"83de1d7302569ad56cf9139a41e2e11346d4cb4a31c00142557b6ab3fa550761\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/conway-genesis.json;\n      ConwayGenesisHash = \"9cc5084f02e27210eacba47af0872e3dba8946ad9460b6072d793e1d2f3987ef\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = false;\n      ExperimentalProtocolsEnabled = false;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/preview/shelley-genesis.json;\n      ShelleyGenesisHash = \"363498d1024f84bb39d3fa9593ce391483cb40d479b87233f868d6e57c3a400d\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    private = false;\n    relaysNew = \"preview-node.play.dev.cardano.org\";\n    smashUrl = \"https://preview-smash.play.dev.cardano.org\";\n    submitApiConfig = {\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      GenesisHash = \"83de1d7302569ad56cf9139a41e2e11346d4cb4a31c00142557b6ab3fa550761\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    useByronWallet = false;\n    usePeersFromLedgerAfterSlot = 53827185;\n  };\n  private = {\n    consensusProtocol = \"Cardano\";\n    dbSyncConfig = {\n      EnableFutureGenesis = true;\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      NetworkName = \"private\";\n      NodeConfigFile = \"/nix/store/xbkg7xhgp6rwynqfc6mi7pfggq747gxj-config-private.json\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    domain = \"play.dev.cardano.org\";\n    edgeNodes = [\n      {\n        addr = \"private-node.play.dev.cardano.org\";\n        port = 3001;\n      }\n    ];\n    edgePort = 3001;\n    explorerConfig = {\n      NetworkName = \"private\";\n      NodeConfigFile = \"/nix/store/xbkg7xhgp6rwynqfc6mi7pfggq747gxj-config-private.json\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n    };\n    explorerUrl = \"https://private-explorer.play.dev.cardano.org\";\n    extraDbSyncConfig = {\n      enableFutureGenesis = true;\n    };\n    metadataUrl = \"https://metadata.play.dev.cardano.org\";\n    mithrilSignerConfig = {\n      network = \"private\";\n      network_magic = 5;\n      run_interval = 60000;\n      store_retention_limit = 5;\n    };\n    name = \"private\";\n    networkConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/byron-genesis.json;\n      ByronGenesisHash = \"200222f56d3582c58af09ba58d53e294fcca5de2fc6a27913803e427cdf147f3\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/conway-genesis.json;\n      ConwayGenesisHash = \"75ff70079cca9f3fd2109d89d5770e96f6f79827dba7b410a69ee90066b78c5f\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/shelley-genesis.json;\n      ShelleyGenesisHash = \"ae9da178ddecfbde046d2c59d4afd087bafd6e2ff04532e6077eab7f8098fa03\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n    };\n    networkConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/byron-genesis.json;\n      ByronGenesisHash = \"200222f56d3582c58af09ba58d53e294fcca5de2fc6a27913803e427cdf147f3\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/conway-genesis.json;\n      ConwayGenesisHash = \"75ff70079cca9f3fd2109d89d5770e96f6f79827dba7b410a69ee90066b78c5f\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/shelley-genesis.json;\n      ShelleyGenesisHash = \"ae9da178ddecfbde046d2c59d4afd087bafd6e2ff04532e6077eab7f8098fa03\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n    };\n    nodeConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/byron-genesis.json;\n      ByronGenesisHash = \"200222f56d3582c58af09ba58d53e294fcca5de2fc6a27913803e427cdf147f3\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/conway-genesis.json;\n      ConwayGenesisHash = \"75ff70079cca9f3fd2109d89d5770e96f6f79827dba7b410a69ee90066b78c5f\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/shelley-genesis.json;\n      ShelleyGenesisHash = \"ae9da178ddecfbde046d2c59d4afd087bafd6e2ff04532e6077eab7f8098fa03\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    nodeConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/byron-genesis.json;\n      ByronGenesisHash = \"200222f56d3582c58af09ba58d53e294fcca5de2fc6a27913803e427cdf147f3\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/conway-genesis.json;\n      ConwayGenesisHash = \"75ff70079cca9f3fd2109d89d5770e96f6f79827dba7b410a69ee90066b78c5f\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/private/shelley-genesis.json;\n      ShelleyGenesisHash = \"ae9da178ddecfbde046d2c59d4afd087bafd6e2ff04532e6077eab7f8098fa03\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    private = true;\n    relaysNew = \"private-node.play.dev.cardano.org\";\n    smashUrl = \"https://private-smash.play.dev.cardano.org\";\n    submitApiConfig = {\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      GenesisHash = \"200222f56d3582c58af09ba58d53e294fcca5de2fc6a27913803e427cdf147f3\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    useByronWallet = false;\n    usePeersFromLedgerAfterSlot = 1886369;\n  };\n  sanchonet = {\n    consensusProtocol = \"Cardano\";\n    dbSyncConfig = {\n      EnableFutureGenesis = true;\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      NetworkName = \"sanchonet\";\n      NodeConfigFile = \"/nix/store/safwck7da2213agm8j7aivs9ljb91k8l-config-sanchonet.json\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    domain = \"play.dev.cardano.org\";\n    edgeNodes = [\n      {\n        addr = \"sanchonet-node.play.dev.cardano.org\";\n        port = 3001;\n      }\n    ];\n    edgePort = 3001;\n    explorerConfig = {\n      NetworkName = \"sanchonet\";\n      NodeConfigFile = \"/nix/store/safwck7da2213agm8j7aivs9ljb91k8l-config-sanchonet.json\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n    };\n    explorerUrl = \"https://sanchonet-explorer.play.dev.cardano.org\";\n    extraDbSyncConfig = {\n      enableFutureGenesis = true;\n    };\n    metadataUrl = \"https://metadata.play.dev.cardano.org\";\n    mithrilAggregatorEndpointUrl = \"https://aggregator.testing-sanchonet.api.mithril.network/aggregator\";\n    mithrilEraReaderParams = {\n      address = \"addr_test1qrg9v8xjjjjx95k2h2gquwrah8424798wqa5exuyhqpcggfyse0nuafkp7rnkxsssxue37259lfhemjdhs333u7v0gwsd0dr30\";\n      verification_key = \"5b35352c3232382c3134342c38372c3133382c3133362c34382c382c31342c3138372c38352c3134382c39372c3233322c3235352c3232392c33382c3234342c3234372c3230342c3139382c31332c33312c3232322c32352c3136342c35322c3130322c39312c3132302c3230382c3134375d\";\n    };\n    mithrilGenesisVerificationKey = \"5b3132372c37332c3132342c3136312c362c3133372c3133312c3231332c3230372c3131372c3139382c38352c3137362c3139392c3136322c3234312c36382c3132332c3131392c3134352c31332c3233322c3234332c34392c3232392c322c3234392c3230352c3230352c33392c3233352c34345d\";\n    mithrilSignerConfig = {\n      aggregator_endpoint = \"https://aggregator.testing-sanchonet.api.mithril.network/aggregator\";\n      era_reader_adapter_params = \"{\\\"address\\\":\\\"addr_test1qrg9v8xjjjjx95k2h2gquwrah8424798wqa5exuyhqpcggfyse0nuafkp7rnkxsssxue37259lfhemjdhs333u7v0gwsd0dr30\\\",\\\"verification_key\\\":\\\"5b35352c3232382c3134342c38372c3133382c3133362c34382c382c31342c3138372c38352c3134382c39372c3233322c3235352c3232392c33382c3234342c3234372c3230342c3139382c31332c33312c3232322c32352c3136342c35322c3130322c39312c3132302c3230382c3134375d\\\"}\";\n      era_reader_adapter_type = \"cardano-chain\";\n      network = \"sanchonet\";\n      network_magic = 4;\n      run_interval = 60000;\n      store_retention_limit = 5;\n    };\n    name = \"sanchonet\";\n    networkConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/byron-genesis.json;\n      ByronGenesisHash = \"785eb88427e136378a15b0a152a8bfbeec7a611529ccda29c43a1e60ffb48eaa\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/conway-genesis.json;\n      ConwayGenesisHash = \"e85ee5b7af8ca5c273c20746c9f994aef1a72a79c38b4eea230817e7e66c0741\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/shelley-genesis.json;\n      ShelleyGenesisHash = \"f94457ec45a0c6773057a529533cf7ccf746cb44dabd56ae970e1dbfb55bfdb2\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n    };\n    networkConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/byron-genesis.json;\n      ByronGenesisHash = \"785eb88427e136378a15b0a152a8bfbeec7a611529ccda29c43a1e60ffb48eaa\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/conway-genesis.json;\n      ConwayGenesisHash = \"e85ee5b7af8ca5c273c20746c9f994aef1a72a79c38b4eea230817e7e66c0741\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/shelley-genesis.json;\n      ShelleyGenesisHash = \"f94457ec45a0c6773057a529533cf7ccf746cb44dabd56ae970e1dbfb55bfdb2\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n    };\n    nodeConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/byron-genesis.json;\n      ByronGenesisHash = \"785eb88427e136378a15b0a152a8bfbeec7a611529ccda29c43a1e60ffb48eaa\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/conway-genesis.json;\n      ConwayGenesisHash = \"e85ee5b7af8ca5c273c20746c9f994aef1a72a79c38b4eea230817e7e66c0741\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/shelley-genesis.json;\n      ShelleyGenesisHash = \"f94457ec45a0c6773057a529533cf7ccf746cb44dabd56ae970e1dbfb55bfdb2\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    nodeConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/byron-genesis.json;\n      ByronGenesisHash = \"785eb88427e136378a15b0a152a8bfbeec7a611529ccda29c43a1e60ffb48eaa\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/conway-genesis.json;\n      ConwayGenesisHash = \"e85ee5b7af8ca5c273c20746c9f994aef1a72a79c38b4eea230817e7e66c0741\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/sanchonet/shelley-genesis.json;\n      ShelleyGenesisHash = \"f94457ec45a0c6773057a529533cf7ccf746cb44dabd56ae970e1dbfb55bfdb2\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    private = false;\n    relaysNew = \"sanchonet-node.play.dev.cardano.org\";\n    smashUrl = \"https://sanchonet-smash.play.dev.cardano.org\";\n    submitApiConfig = {\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      GenesisHash = \"785eb88427e136378a15b0a152a8bfbeec7a611529ccda29c43a1e60ffb48eaa\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    useByronWallet = false;\n    usePeersFromLedgerAfterSlot = 33695977;\n  };\n  shelley_qa = {\n    consensusProtocol = \"Cardano\";\n    dbSyncConfig = {\n      EnableFutureGenesis = false;\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      NetworkName = \"shelley_qa\";\n      NodeConfigFile = \"/nix/store/4sgw9dw44g1zfd2biv5bw4h4c79gs9n2-config-shelley_qa.json\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    domain = \"play.dev.cardano.org\";\n    edgeNodes = [\n      {\n        addr = \"shelley-qa-node.play.dev.cardano.org\";\n        port = 3001;\n      }\n    ];\n    edgePort = 3001;\n    explorerConfig = {\n      NetworkName = \"shelley_qa\";\n      NodeConfigFile = \"/nix/store/4sgw9dw44g1zfd2biv5bw4h4c79gs9n2-config-shelley_qa.json\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n    };\n    explorerUrl = \"https://shelley-qa-explorer.play.dev.cardano.org\";\n    metadataUrl = \"https://metadata.play.dev.cardano.org\";\n    mithrilSignerConfig = {\n      network = \"shelley_qa\";\n      network_magic = 3;\n      run_interval = 60000;\n      store_retention_limit = 5;\n    };\n    name = \"shelley_qa\";\n    networkConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/byron-genesis.json;\n      ByronGenesisHash = \"273cd12237b98d02f108c9c50063d29a8d1d7f32e9a75ade7cd48e08b3070258\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/conway-genesis.json;\n      ConwayGenesisHash = \"91bedad42212c07f6abdafedb7e7c8577fbd07152c695ffae1ab2a528741c6e4\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/shelley-genesis.json;\n      ShelleyGenesisHash = \"73a9f6bdb0aa97f5e63190a6f14a702bd64a21f2bec831cbfc28f6037128b952\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n      minSeverity = \"Debug\";\n    };\n    networkConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/byron-genesis.json;\n      ByronGenesisHash = \"273cd12237b98d02f108c9c50063d29a8d1d7f32e9a75ade7cd48e08b3070258\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/conway-genesis.json;\n      ConwayGenesisHash = \"91bedad42212c07f6abdafedb7e7c8577fbd07152c695ffae1ab2a528741c6e4\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/shelley-genesis.json;\n      ShelleyGenesisHash = \"73a9f6bdb0aa97f5e63190a6f14a702bd64a21f2bec831cbfc28f6037128b952\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n      minSeverity = \"Debug\";\n    };\n    nodeConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/byron-genesis.json;\n      ByronGenesisHash = \"273cd12237b98d02f108c9c50063d29a8d1d7f32e9a75ade7cd48e08b3070258\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/conway-genesis.json;\n      ConwayGenesisHash = \"91bedad42212c07f6abdafedb7e7c8577fbd07152c695ffae1ab2a528741c6e4\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = true;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/shelley-genesis.json;\n      ShelleyGenesisHash = \"73a9f6bdb0aa97f5e63190a6f14a702bd64a21f2bec831cbfc28f6037128b952\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 150;\n      TargetNumberOfRootPeers = 60;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Debug\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    nodeConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/alonzo-genesis.json;\n      AlonzoGenesisHash = \"8bedcaea62107d8a79ed5293b0027b3f8706a4bc2422f33380cb1fd01c6fa6ec\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/byron-genesis.json;\n      ByronGenesisHash = \"273cd12237b98d02f108c9c50063d29a8d1d7f32e9a75ade7cd48e08b3070258\";\n      ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/conway-genesis.json;\n      ConwayGenesisHash = \"91bedad42212c07f6abdafedb7e7c8577fbd07152c695ffae1ab2a528741c6e4\";\n      EnableP2P = true;\n      ExperimentalHardForksEnabled = true;\n      ExperimentalProtocolsEnabled = true;\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 1;\n      MinNodeVersion = \"8.12.0\";\n      PeerSharing = false;\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/shelley_qa/shelley-genesis.json;\n      ShelleyGenesisHash = \"73a9f6bdb0aa97f5e63190a6f14a702bd64a21f2bec831cbfc28f6037128b952\";\n      TargetNumberOfActivePeers = 20;\n      TargetNumberOfEstablishedPeers = 50;\n      TargetNumberOfKnownPeers = 100;\n      TargetNumberOfRootPeers = 100;\n      TestAllegraHardForkAtEpoch = 0;\n      TestAlonzoHardForkAtEpoch = 0;\n      TestMaryHardForkAtEpoch = 0;\n      TestShelleyHardForkAtEpoch = 0;\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Debug\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    private = true;\n    relaysNew = \"shelley-qa-node.play.dev.cardano.org\";\n    smashUrl = \"https://shelley-qa-smash.play.dev.cardano.org\";\n    submitApiConfig = {\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      GenesisHash = \"273cd12237b98d02f108c9c50063d29a8d1d7f32e9a75ade7cd48e08b3070258\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    useByronWallet = false;\n    usePeersFromLedgerAfterSlot = 31348805;\n  };\n  testnet = {\n    confKey = \"testnet_full\";\n    consensusProtocol = \"Cardano\";\n    dbSyncConfig = {\n      EnableFutureGenesis = false;\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      NetworkName = \"testnet\";\n      NodeConfigFile = \"/nix/store/ac579847xn66vkyqgpfk3kb8czzw7mak-config-testnet.json\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    edgeNodes = [ ];\n    edgePort = 3001;\n    explorerConfig = {\n      NetworkName = \"testnet\";\n      NodeConfigFile = \"/nix/store/ac579847xn66vkyqgpfk3kb8czzw7mak-config-testnet.json\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n    };\n    explorerUrl = \"https://doesnotexist.iog.io\";\n    metadataUrl = \"https://doesnotexist.iog.io\";\n    mithrilSignerConfig = {\n      network = \"testnet\";\n      network_magic = 1097911063;\n      run_interval = 60000;\n      store_retention_limit = 5;\n    };\n    networkConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/byron-genesis.json;\n      ByronGenesisHash = \"96fceff972c2c06bd3bb5243c39215333be6d56aaf4823073dca31afe5038471\";\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 0;\n      MaxKnownMajorProtocolVersion = 2;\n      MinNodeVersion = \"8.12.0\";\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/shelley-genesis.json;\n      ShelleyGenesisHash = \"849a1764f152e1b09c89c0dfdbcbdd38d711d1fec2db5dfa0f87cf2737a0eaf4\";\n    };\n    networkConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/byron-genesis.json;\n      ByronGenesisHash = \"96fceff972c2c06bd3bb5243c39215333be6d56aaf4823073dca31afe5038471\";\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 0;\n      MaxKnownMajorProtocolVersion = 2;\n      MinNodeVersion = \"8.12.0\";\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/shelley-genesis.json;\n      ShelleyGenesisHash = \"849a1764f152e1b09c89c0dfdbcbdd38d711d1fec2db5dfa0f87cf2737a0eaf4\";\n    };\n    nodeConfig = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/byron-genesis.json;\n      ByronGenesisHash = \"96fceff972c2c06bd3bb5243c39215333be6d56aaf4823073dca31afe5038471\";\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 0;\n      MaxKnownMajorProtocolVersion = 2;\n      MinNodeVersion = \"8.12.0\";\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/shelley-genesis.json;\n      ShelleyGenesisHash = \"849a1764f152e1b09c89c0dfdbcbdd38d711d1fec2db5dfa0f87cf2737a0eaf4\";\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    nodeConfigBp = {\n      AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/alonzo-genesis.json;\n      AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n      ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/byron-genesis.json;\n      ByronGenesisHash = \"96fceff972c2c06bd3bb5243c39215333be6d56aaf4823073dca31afe5038471\";\n      LastKnownBlockVersion-Alt = 0;\n      LastKnownBlockVersion-Major = 3;\n      LastKnownBlockVersion-Minor = 0;\n      MaxKnownMajorProtocolVersion = 2;\n      MinNodeVersion = \"8.12.0\";\n      Protocol = \"Cardano\";\n      RequiresNetworkMagic = \"RequiresMagic\";\n      ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/testnet/shelley-genesis.json;\n      ShelleyGenesisHash = \"849a1764f152e1b09c89c0dfdbcbdd38d711d1fec2db5dfa0f87cf2737a0eaf4\";\n      TraceAcceptPolicy = true;\n      TraceBlockFetchClient = false;\n      TraceBlockFetchDecisions = false;\n      TraceBlockFetchProtocol = false;\n      TraceBlockFetchProtocolSerialised = false;\n      TraceBlockFetchServer = false;\n      TraceChainDb = true;\n      TraceChainSyncBlockServer = false;\n      TraceChainSyncClient = false;\n      TraceChainSyncHeaderServer = false;\n      TraceChainSyncProtocol = false;\n      TraceConnectionManager = true;\n      TraceDNSResolver = true;\n      TraceDNSSubscription = true;\n      TraceDiffusionInitialization = true;\n      TraceErrorPolicy = true;\n      TraceForge = true;\n      TraceHandshake = true;\n      TraceInboundGovernor = true;\n      TraceIpSubscription = true;\n      TraceLedgerPeers = true;\n      TraceLocalChainSyncProtocol = false;\n      TraceLocalConnectionManager = true;\n      TraceLocalErrorPolicy = true;\n      TraceLocalHandshake = true;\n      TraceLocalRootPeers = true;\n      TraceLocalTxSubmissionProtocol = false;\n      TraceLocalTxSubmissionServer = false;\n      TraceMempool = true;\n      TraceMux = false;\n      TracePeerSelection = true;\n      TracePeerSelectionActions = true;\n      TracePublicRootPeers = true;\n      TraceServer = true;\n      TraceTxInbound = false;\n      TraceTxOutbound = false;\n      TraceTxSubmissionProtocol = false;\n      TracingVerbosity = \"NormalVerbosity\";\n      TurnOnLogMetrics = true;\n      TurnOnLogging = true;\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      hasEKG = 12788;\n      hasPrometheus = [\n        \"127.0.0.1\"\n        12798\n      ];\n      minSeverity = \"Info\";\n      options = {\n        mapBackends = {\n          \"cardano.node.metrics\" = [\n            \"EKGViewBK\"\n          ];\n          \"cardano.node.resources\" = [\n            \"EKGViewBK\"\n          ];\n        };\n        mapSubtrace = {\n          \"cardano.node.metrics\" = {\n            subtrace = \"Neutral\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    private = true;\n    relays = \"doesnotexist.iog.io\";\n    relaysNew = \"doesnotexist.iog.io\";\n    smashUrl = \"https://doesnotexist.iog.io\";\n    submitApiConfig = {\n      EnableLogMetrics = false;\n      EnableLogging = true;\n      GenesisHash = \"96fceff972c2c06bd3bb5243c39215333be6d56aaf4823073dca31afe5038471\";\n      PrometheusPort = 8080;\n      RequiresNetworkMagic = \"RequiresMagic\";\n      defaultBackends = [\n        \"KatipBK\"\n      ];\n      defaultScribes = [\n        [\n          \"StdoutSK\"\n          \"stdout\"\n        ]\n      ];\n      minSeverity = \"Info\";\n      options = {\n        cfokey = {\n          value = \"Release-1.0.0\";\n        };\n        mapBackends = { };\n        mapSeverity = {\n          db-sync-node = \"Info\";\n          \"db-sync-node.Mux\" = \"Error\";\n          \"db-sync-node.Subscription\" = \"Error\";\n        };\n        mapSubtrace = {\n          \"#ekgview\" = {\n            contents = [\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \".monoclock.basic.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"cardano.epoch-validation.benchmark\";\n                  tag = \"Contains\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.cpuNs.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n              [\n                {\n                  contents = \"#ekgview.#aggregation.cardano.epoch-validation.benchmark\";\n                  tag = \"StartsWith\";\n                }\n                [\n                  {\n                    contents = \"diff.RTS.gcNum.timed.\";\n                    tag = \"Contains\";\n                  }\n                ]\n              ]\n            ];\n            subtrace = \"FilterTrace\";\n          };\n          \"#messagecounters.aggregation\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.ekgview\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.katip\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.monitoring\" = {\n            subtrace = \"NoTrace\";\n          };\n          \"#messagecounters.switchboard\" = {\n            subtrace = \"NoTrace\";\n          };\n          benchmark = {\n            contents = [\n              \"GhcRtsStats\"\n              \"MonotonicClock\"\n            ];\n            subtrace = \"ObservableTrace\";\n          };\n          \"cardano.epoch-validation.utxo-stats\" = {\n            subtrace = \"NoTrace\";\n          };\n        };\n      };\n      rotation = {\n        rpKeepFilesNum = 10;\n        rpLogLimitBytes = 5000000;\n        rpMaxAgeHours = 24;\n      };\n      setupBackends = [\n        \"AggregationBK\"\n        \"KatipBK\"\n      ];\n      setupScribes = [\n        {\n          scFormat = \"ScText\";\n          scKind = \"StdoutSK\";\n          scName = \"stdout\";\n          scRotation = null;\n        }\n      ];\n    };\n    useByronWallet = true;\n    usePeersFromLedgerAfterSlot = -1;\n  };\n}\n</code></pre> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeeventlog","title":"services.cardano-node.eventlog","text":"<p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeexecutable","title":"services.cardano-node.executable","text":"<p>The cardano-node executable invocation to use</p> <p>Type: string</p> <p>Default: <code>\"cardano-node\"</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeextraargs","title":"services.cardano-node.extraArgs","text":"<p>Extra CLI args for \u2018cardano-node\u2019.</p> <p>Type: list of string</p> <p>Default: <code>[ ]</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeextranodeconfig","title":"services.cardano-node.extraNodeConfig","text":"<p>Additional node config.</p> <p>Type: attribute set</p> <p>Default: <code>{ }</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeextranodeinstanceconfig","title":"services.cardano-node.extraNodeInstanceConfig","text":"<p>Additional node config for a particular instance.</p> <p>Type: function that evaluates to a(n) (attribute set)</p> <p>Default: <code>&lt;function&gt;</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeextraserviceconfig","title":"services.cardano-node.extraServiceConfig","text":"<p>Extra systemd service config (apply to all instances).</p> <p>Type: function that evaluates to a(n) (attribute set)</p> <p>Default: <code>&lt;function&gt;</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeextrasocketconfig","title":"services.cardano-node.extraSocketConfig","text":"<p>Extra systemd socket config (apply to all instances).</p> <p>Type: function that evaluates to a(n) (attribute set)</p> <p>Default: <code>&lt;function&gt;</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeforcehardforks","title":"services.cardano-node.forceHardForks","text":"<p>A developer-oriented dictionary option to force hard forks for given eras at given epochs.  Maps capitalised era names (Shelley, Allegra, Mary, etc.) to hard fork epoch number.</p> <p>Type: attribute set of signed integer</p> <p>Default: <code>{ }</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodehostaddr","title":"services.cardano-node.hostAddr","text":"<p>The host address to bind to</p> <p>Type: string</p> <p>Default: <code>\"127.0.0.1\"</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeinstanceproducers","title":"services.cardano-node.instanceProducers","text":"<p>Static routes to local peers, specific to a given instance (when multiple instances are used).</p> <p>Type: function that evaluates to a(n) list of (attribute set)</p> <p>Default: <code>&lt;function&gt;</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeinstancepublicproducers","title":"services.cardano-node.instancePublicProducers","text":"<p>Routes to public peers. Only used if slot &lt; usePeersFromLedgerAfterSlot and specific to a given instance (when multiple instances are used).</p> <p>Type: function that evaluates to a(n) list of (attribute set)</p> <p>Default: <code>&lt;function&gt;</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeinstances","title":"services.cardano-node.instances","text":"<p>Number of instance of the service to run.</p> <p>Type: signed integer</p> <p>Default: <code>1</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeipv6hostaddr","title":"services.cardano-node.ipv6HostAddr","text":"<p>The ipv6 host address to bind to. Set to null to disable.</p> <p>Type: null or string or function that evaluates to a(n) (null or string)</p> <p>Default: <code>&lt;function&gt;</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeisproducer","title":"services.cardano-node.isProducer","text":"<p>Whether this node is intended to be a producer. Internal option for inter-module communication.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodekeskey","title":"services.cardano-node.kesKey","text":"<p>Signing key</p> <p>Type: null or string or path</p> <p>Default: <code>null</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodelmdbdatabasepath","title":"services.cardano-node.lmdbDatabasePath","text":"<p>Node UTxO-HD LMDB path for performant disk I/O, for each instance. This could point to a direct-access SSD, with a specifically created journal-less file system and optimized mount options.</p> <p>Type: null or string or function that evaluates to a(n) (null or string)</p> <p>Default: <code>null</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodenodeconfig","title":"services.cardano-node.nodeConfig","text":"<p>Internal representation of the config.</p> <p>Type: attribute set</p> <p>Default:</p> This value is long. Click to expand. <pre><code>{\n  AlonzoGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/alonzo-genesis.json;\n  AlonzoGenesisHash = \"7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874\";\n  ByronGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/byron-genesis.json;\n  ByronGenesisHash = \"5f20df933584822601f9e3f8c024eb5eb252fe8cefb24d1317dc3d432e940ebb\";\n  ConwayGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/conway-genesis.json;\n  ConwayGenesisHash = \"15a199f895e461ec0ffc6dd4e4028af28a492ab4e806d39cb674c88f7643ef62\";\n  EnableP2P = true;\n  LastKnownBlockVersion-Alt = 0;\n  LastKnownBlockVersion-Major = 3;\n  LastKnownBlockVersion-Minor = 0;\n  MaxKnownMajorProtocolVersion = 2;\n  MinNodeVersion = \"8.12.0\";\n  PeerSharing = true;\n  Protocol = \"Cardano\";\n  RequiresNetworkMagic = \"RequiresNoMagic\";\n  ShelleyGenesisFile = /nix/store/lcjqjabk3z438scr2z4n7n23rrgxdi17-source/cardano-lib/mainnet/shelley-genesis.json;\n  ShelleyGenesisHash = \"1a3be38bcbb7911969283716ad7aa550250226b76a61fc51cc9a9a35d9276d81\";\n  TargetNumberOfActivePeers = 20;\n  TargetNumberOfEstablishedPeers = 50;\n  TargetNumberOfKnownPeers = 150;\n  TargetNumberOfRootPeers = 60;\n  TraceAcceptPolicy = true;\n  TraceBlockFetchClient = false;\n  TraceBlockFetchDecisions = false;\n  TraceBlockFetchProtocol = false;\n  TraceBlockFetchProtocolSerialised = false;\n  TraceBlockFetchServer = false;\n  TraceChainDb = true;\n  TraceChainSyncBlockServer = false;\n  TraceChainSyncClient = false;\n  TraceChainSyncHeaderServer = false;\n  TraceChainSyncProtocol = false;\n  TraceConnectionManager = true;\n  TraceDNSResolver = true;\n  TraceDNSSubscription = true;\n  TraceDiffusionInitialization = true;\n  TraceErrorPolicy = true;\n  TraceForge = true;\n  TraceHandshake = true;\n  TraceInboundGovernor = true;\n  TraceIpSubscription = true;\n  TraceLedgerPeers = true;\n  TraceLocalChainSyncProtocol = false;\n  TraceLocalConnectionManager = true;\n  TraceLocalErrorPolicy = true;\n  TraceLocalHandshake = true;\n  TraceLocalRootPeers = true;\n  TraceLocalTxSubmissionProtocol = false;\n  TraceLocalTxSubmissionServer = false;\n  TraceMempool = false;\n  TraceMux = false;\n  TracePeerSelection = true;\n  TracePeerSelectionActions = true;\n  TracePublicRootPeers = true;\n  TraceServer = true;\n  TraceTxInbound = false;\n  TraceTxOutbound = false;\n  TraceTxSubmissionProtocol = false;\n  TracingVerbosity = \"NormalVerbosity\";\n  TurnOnLogMetrics = true;\n  TurnOnLogging = true;\n  defaultBackends = [\n    \"KatipBK\"\n  ];\n  defaultScribes = [\n    [\n      \"StdoutSK\"\n      \"stdout\"\n    ]\n  ];\n  hasEKG = 12788;\n  hasPrometheus = [\n    \"127.0.0.1\"\n    12798\n  ];\n  minSeverity = \"Info\";\n  options = {\n    mapBackends = {\n      \"cardano.node.metrics\" = [\n        \"EKGViewBK\"\n      ];\n      \"cardano.node.resources\" = [\n        \"EKGViewBK\"\n      ];\n    };\n    mapSubtrace = {\n      \"cardano.node.metrics\" = {\n        subtrace = \"Neutral\";\n      };\n    };\n  };\n  rotation = {\n    rpKeepFilesNum = 10;\n    rpLogLimitBytes = 5000000;\n    rpMaxAgeHours = 24;\n  };\n  setupBackends = [\n    \"KatipBK\"\n  ];\n  setupScribes = [\n    {\n      scFormat = \"ScText\";\n      scKind = \"StdoutSK\";\n      scName = \"stdout\";\n      scRotation = null;\n    }\n  ];\n}\n</code></pre> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodenodeconfigfile","title":"services.cardano-node.nodeConfigFile","text":"<p>Actual configuration file (shell expression).</p> <p>Type: null or string</p> <p>Default: <code>null</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodenodeid","title":"services.cardano-node.nodeId","text":"<p>The ID for this node</p> <p>Type: signed integer</p> <p>Default: <code>0</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeoperationalcertificate","title":"services.cardano-node.operationalCertificate","text":"<p>Operational certificate</p> <p>Type: null or string or path</p> <p>Default: <code>null</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeport","title":"services.cardano-node.port","text":"<p>The port number</p> <p>Type: signed integer or string</p> <p>Default: <code>3001</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeproducers","title":"services.cardano-node.producers","text":"<p>Static routes to local peers.</p> <p>Type: list of (attribute set)</p> <p>Default: <code>[ ]</code></p> <p>Example:</p> <pre><code>[\n  {\n    accessPoints = [\n      {\n        address = \"127.0.0.1\";\n        port = 3001;\n      }\n    ];\n    advertise = false;\n    valency = 1;\n  }\n]\n</code></pre> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeprofiling","title":"services.cardano-node.profiling","text":"<p>Type: one of \u201cnone\u201d, \u201ctime\u201d, \u201ctime-detail\u201d, \u201cspace\u201d, \u201cspace-cost\u201d, \u201cspace-module\u201d, \u201cspace-closure\u201d, \u201cspace-type\u201d, \u201cspace-retainer\u201d, \u201cspace-bio\u201d, \u201cspace-heap\u201d</p> <p>Default: <code>\"none\"</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeprofilingargs","title":"services.cardano-node.profilingArgs","text":"<p>RTS profiling options</p> <p>Type: list of string</p> <p>Default: <code>[ ]</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodepublicproducers","title":"services.cardano-node.publicProducers","text":"<p>Routes to public peers. Only used if slot &lt; usePeersFromLedgerAfterSlot</p> <p>Type: list of (attribute set)</p> <p>Default: <code>[ ]</code></p> <p>Example:</p> <pre><code>[\n  {\n    accessPoints = [\n      {\n        address = \"backbone.cardano-mainnet.iohk.io\";\n        port = 3001;\n      }\n    ];\n    advertise = false;\n  }\n]\n</code></pre> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodertsargs","title":"services.cardano-node.rtsArgs","text":"<p>Extra CLI args for \u2018cardano-node\u2019, to be surrounded by \u201c+RTS\u201d/\u201c-RTS\u201d</p> <p>Type: list of string</p> <p>Default:</p> <pre><code>[\n  \"-N2\"\n  \"-I0\"\n  \"-A16m\"\n  \"-qg\"\n  \"-qb\"\n  \"--disable-delayed-os-memory-return\"\n]\n</code></pre> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-noderts_flags_override","title":"services.cardano-node.rts_flags_override","text":"<p>RTS flags override from profile content.</p> <p>Type: list of string</p> <p>Default: <code>[ ]</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-noderuntimedir","title":"services.cardano-node.runtimeDir","text":"<p>Runtime directory relative to /run, for each instance</p> <p>Type: null or string or function that evaluates to a(n) (null or string)</p> <p>Default: <code>&lt;function&gt;</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodescript","title":"services.cardano-node.script","text":"<p>Type: string</p> <p>Default:</p> This value is long. Click to expand. <pre><code>''\n  echo \"Starting: exec /nix/store/n7ak0pphzvgd5iwgl443ysyhd2jyk4mz-cardano-node-exe-cardano-node-9.1.1/bin/cardano-node run\"\n     echo \"--config /nix/store/kq04x2fjvnmv11fawj870fixsma9g47x-config-0-0.json\"\n     echo \"--database-path /var/lib/cardano-node/db-mainnet\"\n     echo \"--topology /nix/store/kdc84liz9lm4r0vpzf8pgvan66ch9x35-topology.yaml\"\n     echo \"--host-addr 127.0.0.1\"\n     echo \"--port 3001\"\n     echo \"--socket-path /run/cardano-node/node.socket\"\n     echo \"\"\n     echo \"\"\n     echo \"\"\n     echo \"\"\n     echo \"\"\n     echo \"+RTS\"\n     echo \"-N2\"\n     echo \"-I0\"\n     echo \"-A16m\"\n     echo \"-qg\"\n     echo \"-qb\"\n     echo \"--disable-delayed-os-memory-return\"\n     echo \"-RTS\"\n  echo \"..or, once again, in a single line:\"\n  echo \"exec /nix/store/n7ak0pphzvgd5iwgl443ysyhd2jyk4mz-cardano-node-exe-cardano-node-9.1.1/bin/cardano-node run --config /nix/store/kq04x2fjvnmv11fawj870fixsma9g47x-config-0-0.json --database-path /var/lib/cardano-node/db-mainnet --topology /nix/store/kdc84liz9lm4r0vpzf8pgvan66ch9x35-topology.yaml --host-addr 127.0.0.1 --port 3001 --socket-path /run/cardano-node/node.socket      +RTS -N2 -I0 -A16m -qg -qb --disable-delayed-os-memory-return -RTS\"\n\n  exec /nix/store/n7ak0pphzvgd5iwgl443ysyhd2jyk4mz-cardano-node-exe-cardano-node-9.1.1/bin/cardano-node run --config /nix/store/kq04x2fjvnmv11fawj870fixsma9g47x-config-0-0.json --database-path /var/lib/cardano-node/db-mainnet --topology /nix/store/kdc84liz9lm4r0vpzf8pgvan66ch9x35-topology.yaml --host-addr 127.0.0.1 --port 3001 --socket-path /run/cardano-node/node.socket      +RTS -N2 -I0 -A16m -qg -qb --disable-delayed-os-memory-return -RTS''\n</code></pre> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeshareipv4port","title":"services.cardano-node.shareIpv4port","text":"<p>Should instances on same machine share ipv4 port. Default: true if systemd activated socket. Otherwise false. If false use port increments starting from <code>port</code>.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeshareipv6port","title":"services.cardano-node.shareIpv6port","text":"<p>Should instances on same machine share ipv6 port. Default: true if systemd activated socket. Otherwise false. If false use port increments starting from <code>port</code>.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodesigningkey","title":"services.cardano-node.signingKey","text":"<p>Signing key</p> <p>Type: null or string or path</p> <p>Default: <code>null</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodesocketgroup","title":"services.cardano-node.socketGroup","text":"<p>systemd socket group owner. Note: only applies to sockets created by systemd (ie. when <code>systemdSocketActivation</code> is turned on).</p> <p>Type: string</p> <p>Default: <code>\"cardano-node\"</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodesocketpath","title":"services.cardano-node.socketPath","text":"<p>Local communication socket path, for each instance.</p> <p>Type: string or function that evaluates to a(n) string</p> <p>Default: <code>&lt;function&gt;</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodestatedir","title":"services.cardano-node.stateDir","text":"<p>Directory to store blockchain data, for each instance.</p> <p>Type: string or function that evaluates to a(n) string</p> <p>Default: <code>\"/var/lib/cardano-node\"</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodesystemdsocketactivation","title":"services.cardano-node.systemdSocketActivation","text":"<p>Use systemd socket activation</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodetargetnumberofactivepeers","title":"services.cardano-node.targetNumberOfActivePeers","text":"<p>Number of peers your node is actively downloading headers and blocks from. Default to 2/5 of targetNumberOfEstablishedPeers.</p> <p>Type: signed integer</p> <p>Default: <code>20</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodetargetnumberofestablishedpeers","title":"services.cardano-node.targetNumberOfEstablishedPeers","text":"<p>Number of peers the node will be connected to, but not necessarily following their chain. Default to half of targetNumberOfKnownPeers.</p> <p>Type: signed integer</p> <p>Default: <code>50</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodetargetnumberofknownpeers","title":"services.cardano-node.targetNumberOfKnownPeers","text":"<p>Target number for known peers (root peers + peers known through gossip). Default to targetNumberOfRootPeers.</p> <p>Type: signed integer</p> <p>Default: <code>150</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodetargetnumberofrootpeers","title":"services.cardano-node.targetNumberOfRootPeers","text":"<p>Limits the maximum number of root peers the node will know about</p> <p>Type: signed integer</p> <p>Default: <code>60</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodetopology","title":"services.cardano-node.topology","text":"<p>Cluster topology. If not set <code>producers</code> array is used to generated topology file.</p> <p>Type: null or string or path</p> <p>Default: <code>null</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodetracersocketpathaccept","title":"services.cardano-node.tracerSocketPathAccept","text":"<p>Listen for incoming cardano-tracer connection on a local socket, for each instance.</p> <p>Type: null or string or function that evaluates to a(n) (null or string)</p> <p>Default: <code>null</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodetracersocketpathconnect","title":"services.cardano-node.tracerSocketPathConnect","text":"<p>Connect to cardano-tracer listening on a local socket, for each instance.</p> <p>Type: null or string or function that evaluates to a(n) (null or string)</p> <p>Default: <code>null</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeuselegacytracing","title":"services.cardano-node.useLegacyTracing","text":"<p>Use the legacy tracing, based on iohk-monitoring-framework.</p> <p>Type: boolean</p> <p>Default: <code>true</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeusenewtopology","title":"services.cardano-node.useNewTopology","text":"<p>Use new, p2p/ledger peers compatible topology.</p> <p>Type: boolean</p> <p>Default: <code>true</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeusepeersfromledgerafterslot","title":"services.cardano-node.usePeersFromLedgerAfterSlot","text":"<p>If set, bootstraps from public roots until it reaches given slot, then it switches to using the ledger as a source of peers. It maintains a connection to its local roots. Default to null for block producers.</p> <p>Type: null or signed integer</p> <p>Default: <code>128908821</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodeusesystemdreload","title":"services.cardano-node.useSystemdReload","text":"<p>If set, systemd will reload cardano-node service units instead of restarting them if only the topology file has changed and p2p is in use.</p> <p>Cardano-node topology files will be stored in /etc as: /etc/cardano-node/topology-${toString i}.yaml</p> <p>Enabling this option will also allow direct topology edits for tests when a full service re-deployment is not desired.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodevrfkey","title":"services.cardano-node.vrfKey","text":"<p>Signing key</p> <p>Type: null or string or path</p> <p>Default: <code>null</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodewithcardanotracer","title":"services.cardano-node.withCardanoTracer","text":"<p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/services.cardano-node/#servicescardano-nodewithutxohdlmdb","title":"services.cardano-node.withUtxoHdLmdb","text":"<p>On an UTxO-HD enabled node, the in-memory backend is the default. This activates the on-disk backend (LMDB) instead.</p> <p>Type: boolean or function that evaluates to a(n) boolean</p> <p>Default: <code>false</code></p> <p>Declared by:  - /nix/store/5wh1fbqhpinnbh90bwr2ljpp704wsv57-source/nix/nixos/cardano-node-service.nix</p>"},{"location":"reference/module-options/spo-anywhere/","title":"spo-anywhere","text":""},{"location":"reference/module-options/spo-anywhere/#spo-anywhereenable","title":"spo-anywhere.enable","text":"<p>Whether to enable Enable spo-anywhere.</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Example: <code>true</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/spo-anywhere/tree/main/modules, via option flake.nixosModules.spo-anywhere</p>"},{"location":"reference/module-options/spo-anywhere/#spo-anywhereinstall-scriptenable","title":"spo-anywhere.install-script.enable","text":"<p>Whether to enable Create deployment script at <code>config.system.build.spoInstallScript</code>\u2026</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Example: <code>true</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/spo-anywhere/tree/main/modules, via option flake.nixosModules.install-script</p>"},{"location":"reference/module-options/spo-anywhere/#spo-anywhereinstall-scripttarget","title":"spo-anywhere.install-script.target","text":"<p>The target DNS address to deploy to. Overwritten by a command line argument.</p> <p>Type: null or string</p> <p>Default: <code>null</code></p> <p>Example: <code>\"root@128.196.0.1\"</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/spo-anywhere/tree/main/modules, via option flake.nixosModules.install-script</p>"},{"location":"reference/module-options/spo-anywhere/#spo-anywherenodeenable","title":"spo-anywhere.node.enable","text":"<p>Whether to enable Enable cardano-node with some defaults. Provide necessary keys to run as a block producer\u2026</p> <p>Type: boolean</p> <p>Default: <code>false</code></p> <p>Example: <code>true</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/spo-anywhere/tree/main/modules, via option flake.nixosModules.block-producer-node</p>"},{"location":"reference/module-options/spo-anywhere/#spo-anywherenodeblock-producer-key-path","title":"spo-anywhere.node.block-producer-key-path","text":"<p>Path to the block producer keys directory. Set to null for non-block-producer node. Warning: Secrets, don\u2019t provide /nix/store paths here.</p> <p>Type: null or path</p> <p>Example: <code>\"/etc/spo/keys\"</code></p> <p>Declared by:  - https://github.com/mlabs-haskell/spo-anywhere/tree/main/modules, via option flake.nixosModules.block-producer-node</p>"},{"location":"reference/module-options/spo-anywhere/#spo-anywherenodeconfigfilespath","title":"spo-anywhere.node.configFilesPath","text":"<p>Path to the network configuration directory</p> <p>Type: path</p> <p>Declared by:  - https://github.com/mlabs-haskell/spo-anywhere/tree/main/modules, via option flake.nixosModules.block-producer-node</p>"},{"location":"usage/configure-pool/","title":"Configure pool","text":"<p>Define the nixos configuration:</p> <pre><code>nixosModules.pool = {\n  config = {\n\n      spo-anywhere = {\n        node = {\n          enable = true;\n          # optional, alternatively define configurations directly in `services.cardano-node`\n          configFilesPath = \"/etc/spo/configs\";\n          block-producer-key-path = \"/var/lib/spo\";\n        };\n      };\n\n      # overwrite as desired\n      services.cardano-node = {\n        environment = \"mainnet\";\n        # ...\n      };\n\n      # define the disk partitioning\n      disko.devices = {\n        # ...\n      };\n\n      # remaining options to fully configure the system\n      networking.hostName = \"my-pool\";\n      # ...\n  };\n};\n</code></pre> <p>for full examples see flake template. Check module reference in these docs. Notice that the disko part of the configuration defining the disk partitioning is necessary.</p>"},{"location":"usage/deploy/","title":"Deploy","text":"<p>Once we defined a configuration at <code>.#nixosConfigurations.pool</code>, then running:</p> <pre><code>$ nix build .#nixosConfigurations.pool.config.system.build.spoInstallScript\n</code></pre> <p>builds a script for deploying the configuration to a chosen cloud server (by default to <code>result</code>). You need the node keys from step 2.</p> <p>Run:</p> <pre><code>$ ./result/bin/spo-install-script --target root@my-cloud-server-address --ssh-key ~/.ssh/id_rsa --spo-keys ./spo-keys\n</code></pre> <p>providing the correct dns address for the remote server and an ssh private key allowed to ssh into that server.</p> <p>When the command finishes with a success the server runs a cardano node. To allow it to operate as a stake pool it is left to register the node as a stake pool.</p>"},{"location":"usage/generate-keys/","title":"Generating keys","text":"<p>We need 3 keys:</p> <ul> <li>VRF key</li> <li>KES key</li> <li>Operational certificate</li> </ul> <p>For the breakdown read cardano key pairs. Notice that operational certificate is derived from node cold key and is valid for a period of time, so the cold key is also needed for maintenance.</p> <p>For guide on key generation follow operate a stake pool. You need <code>cardano-cli</code> which can be obtained for example from the projects shell with:</p> <pre><code>nix develop .#spo-shell\n</code></pre> <p>For the next steps create a folder <code>spo-keys</code>:</p> <pre><code>spo-keys/\n  vrf.skey\n  kes.skey\n  opcert.cert\n</code></pre>"},{"location":"usage/register-the-pool/","title":"Register","text":"<p>A running node doesn't start mining blocks until it is registered as a pool. One also needs a registered stake address to collect the gains.</p> <p>In practice this means a need to submit two registering transactions as described in cardano developer docs. This can be done already after the pool is running.</p>"}]}